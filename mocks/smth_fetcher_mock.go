// Code generated by MockGen. DO NOT EDIT.
// Source: ./doer.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	models "github.com/bogatyr285/golang-boilerplate/internal/models"
	gomock "github.com/golang/mock/gomock"
)

// MockSomethingFetcher is a mock of SomethingFetcher interface.
type MockSomethingFetcher struct {
	ctrl     *gomock.Controller
	recorder *MockSomethingFetcherMockRecorder
}

// MockSomethingFetcherMockRecorder is the mock recorder for MockSomethingFetcher.
type MockSomethingFetcherMockRecorder struct {
	mock *MockSomethingFetcher
}

// NewMockSomethingFetcher creates a new mock instance.
func NewMockSomethingFetcher(ctrl *gomock.Controller) *MockSomethingFetcher {
	mock := &MockSomethingFetcher{ctrl: ctrl}
	mock.recorder = &MockSomethingFetcherMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSomethingFetcher) EXPECT() *MockSomethingFetcherMockRecorder {
	return m.recorder
}

// GetSomething mocks base method.
func (m *MockSomethingFetcher) GetSomething(ctx context.Context, query string) ([]*models.Something, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetSomething", ctx, query)
	ret0, _ := ret[0].([]*models.Something)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetSomething indicates an expected call of GetSomething.
func (mr *MockSomethingFetcherMockRecorder) GetSomething(ctx, query interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSomething", reflect.TypeOf((*MockSomethingFetcher)(nil).GetSomething), ctx, query)
}
